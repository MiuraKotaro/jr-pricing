package jr.pricing.jrpricing.application.service;

import jr.pricing.jrpricing.domain.model.fare.料金;
import jr.pricing.jrpricing.domain.model.*;
import jr.pricing.jrpricing.domain.service.団体割引ドメインサービス;
import jr.pricing.jrpricing.domain.service.無料人数ドメインサービス;

public class 料金計算サービス {
    public static 料金 料金計算(駅 降車駅, 利用日 _利用日, 片道往復 _片道往復, 人数 大人人数, 人数 子供人数, 特急利用 _特急利用) {

        無料人数ドメインサービス 無料人数 = new 無料人数ドメインサービス(大人人数, 子供人数);
        大人人数 = 大人人数.引く(無料人数.get大人無料人数());
        子供人数 = 子供人数.引く(無料人数.get子供無料人数());

        料金 片道全員金額 = new 料金(0);
        if (大人人数.compareTo(new 人数(1)) >= 0) {
            料金 大人一人分片道料金 = 一人分片道計算(降車駅, _特急利用, _片道往復, _利用日, 大人人数, 子供人数, 年齢区分.おとな);
            片道全員金額 = 大人一人分片道料金.かける(大人人数);
        }
        if (子供人数.compareTo(new 人数(1)) >= 0) {
            料金 子供一人分片道料金 = 一人分片道計算(降車駅, _特急利用, _片道往復, _利用日, 大人人数, 子供人数, 年齢区分.こども);
            片道全員金額 = 片道全員金額.足す(子供一人分片道料金.かける(子供人数));
        }

        return _片道往復.往復料金計算(片道全員金額);
    }

    private static 料金 一人分片道計算(駅 降車駅, 特急利用 _特急利用, 片道往復 _片道往復, 利用日 _利用日, 人数 大人人数, 人数 子供人数, 年齢区分 _年齢区分) {
        料金 一人分運賃 = _年齢区分.割引計算(降車駅.get運賃());
        一人分運賃 = 運賃割引計算(一人分運賃, 降車駅.getDist(), _片道往復, _利用日, 大人人数, 子供人数);
        return 一人分運賃.足す(_年齢区分.割引計算(_特急利用.get特急料金(降車駅)));
    }

    private static 料金 運賃割引計算(料金 一人分片道運賃, 距離 _距離, 片道往復 _片道往復, 利用日 _利用日, 人数 大人人数, 人数 子供人数) {
        一人分片道運賃 = _片道往復.往復割引計算(一人分片道運賃, _距離);
        一人分片道運賃 = 団体割引ドメインサービス.団体時期割引計算(一人分片道運賃, _利用日, 大人人数, 子供人数);
        return 一人分片道運賃;
    }
}